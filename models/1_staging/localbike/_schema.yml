version: 2

models:
  - name: stg_localbike__brands
    description: "This model contains information about "
    columns:
      - name: brand_id
        description: "Primary key, unique identifier for each brand."
        tests:
          - unique
          - not_null
      - name: brand_name
        description: "Brand name of the bikes."
        tests:
          - accepted_values:
              name: accepted_values_brand_name
              arguments:
                values: ['Electra', 'Haro', 'Heller', 'Pure Cycles', 'Ritchey', 'Strider', 'Sun Bicycles', 'Surly', 'Trek']


  - name: stg_localbike__categories
    description: "This model contains information about bike categories."
    columns:
      - name: category_id
        description: "Primary key, unique identifier for each bike category."
        tests:
          - unique
          - not_null
      - name: category_name
        description: "Name of the category of bike."
      - name: category_type
        description: "Name of the type of the category of bike."


  - name: stg_localbike__customers
    description: "This model contains information about the customers of the localbike company"
    columns:
      - name: customer_id
        description: "Primary key, unique identifier for each ."
        tests:
          - unique
          - not_null
      - name: customer_first_name
      - name: customer_last_first_name
      - name: customer_phone
      - name: customer_email
      - name: customer_street
      - name: customer_city
      - name: customer_state
      - name: customer_zip_code

  - name: stg_localbike__order_items
    description: "This model contains information about the orders items"
    columns:
      - name: order_item_id
        description: "Primary key, unique identifier for each ."
        tests:
          - unique
          - not_null
      - name: order_id
        tests:  
          - relationships:
              name: order_id_foreign_key_in_stg_localbike__order_items
              arguments:
                to: ref('stg_localbike__orders')
                field: order_id
      - name: quantity
        description: "Custom test done - assert_quantity_is_positive_stg_localbike__order_items.sql"
      - name: list_price
        description: "Custom test done - assert_list_price_is_positive_stg_localbike__order_items.sql"
      - name: discount
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              name: test_discount_btw_0_and_1
              arguments:
                min_value: 0
                max_value: 1
      - name: net_price
      - name: gross_sales_amount
      - name: net_sales_amount
      - name: discount_amount

  - name: stg_localbike__orders
    description: "This model contains information about the orders"
    columns:
      - name: order_id
        description: "Primary key, unique identifier for each ."
        tests:
          - unique
          - not_null
      - name: customer_id
        tests:
        - relationships:
            name: customer_id_foreign_key_in_stg_localbike__orders
            arguments:
              to: ref('stg_localbike__customers')
              field: customer_id
        - not_null
      - name: order_status
        tests:
            - not_null
      - name: order_status_label
        description: "classify the orders in delivered or not"
      - name: order_date
        tests:
            - not_null
      - name: order_year
      - name: required_date
      - name: shipped_date
      - name: store_id
        tests:
            - not_null
            - relationships:
                name: store_id_foreign_key_in_stg_localbike__orders
                arguments:
                  to: ref('stg_localbike__stores')
                  field: store_id
      - name: staff_id 
        tests:
            - not_null
            - relationships:
                name: staff_id_foreign_key_in_stg_localbike__orders
                arguments:
                  to: ref('stg_localbike__staffs')
                  field: staff_id

  - name: stg_localbike__products
    description: "This model contains information about the products"
    columns:
      - name: product_id
        description: "Primary key, unique identifier for each ."
        tests:
          - unique
          - not_null
      - name: product_name
        tests:
              - not_null
      - name: brand_id
        tests:
              - not_null
              - relationships:
                  name: brand_id_foreign_key_in_stg_localbike__products
                  arguments:
                    to: ref('stg_localbike__brands')
                    field: brand_id
      - name: category_id
        tests:
            - not_null
            - relationships:
                name: category_id_foreign_key_in_stg_localbike__products
                arguments:
                  to: ref('stg_localbike__categories')
                  field: category_id
      - name: model_year
      - name: list_price 
        description: "Custom test done - assert_list_price_is_positive_stg_localbike__products.sql"


  - name: stg_localbike__staffs
    description: "This model contains information about the staff"
    columns:
      - name: staff_id
        description: "Primary key, unique identifier for each ."
        tests:
          - unique
          - not_null
      - name: staff_first_name
      - name: staff_last_name
        tests:
            - not_null
      - name: staff_email
      - name: staff_phone
      - name: staff_active
        tests:
            - not_null
      - name: store_id
        tests:
            - not_null
            - relationships:
                name: store_id_foreign_key_in_stg_localbike__staffs
                arguments:
                  to: ref('stg_localbike__stores')
                  field: store_id
      - name: manager_id
      - name: manager_first_name
      - name: manager_last_name

  - name: stg_localbike__stores
    description: "This model contains information about the stores"
    columns:
      - name: store_id
        description: "Primary key, unique identifier for each ."
        tests:
          - unique
          - not_null
      - name: store_name
      - name: store_phone
        tests:
            - not_null
      - name: store_email
        tests:
            - not_null
      - name: store_street
      - name: store_city
        tests:
            - not_null
      - name: store_state
        tests:
            - not_null
      - name: store_zip_code
        tests:
            - not_null
    